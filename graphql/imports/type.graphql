type Type {
    id: ID!
    type: String
    edit: Boolean @edit
    delete: Boolean @delete
    download: Boolean @download
    created_at: DateTime
    updated_at: DateTime
}

input TypeInput
    @validator(
        class: "App\\Modules\\Type\\GraphQL\\Validators\\TypeInputValidator"
    ) {
    type: String
}

extend type Query {
    Type(id: ID! @eq): Type! @find
    types(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        type: String @where(operator: "like")
        orderBy: [OrderByClause!]
            @orderBy(default: [{ column: "id", order: ASC }])
    ): [Type!]! @paginate(defaultCount: 10)
    typesSelect(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        type: String @where(operator: "like")
        orderBy: [OrderByClause!]
            @orderBy(default: [{ column: "id", order: ASC }])
    ): [Type!]! @all
}

extend type Mutation {
    createType(input: TypeInput! @spread): Type!
        @field(resolver: "App\\Modules\\Type\\GraphQL\\Mutations\\CreateType")
    updateType(id: Int!, input: TypeInput!): Type!
        @field(resolver: "App\\Modules\\Type\\GraphQL\\Mutations\\UpdateType")
    deleteType(id: Int!): ResponseDelete!
        @field(resolver: "App\\Modules\\Type\\GraphQL\\Mutations\\DeleteType")
}
